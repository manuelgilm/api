name: Build and Deploy API CR
env: 
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ACTIONS_ID_TOKEN_REQUEST_URL: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_URL }}
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      deployments: write
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GITHUB_REPOSITORY=${{ github.repository }}
            GITHUB_SHA=${{ github.sha }}
  build-infrastructure:
    runs-on: ubuntu-latest
    needs: build-docker-image
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VERSION: 1.5.7

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: 'Terraform Format'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: "./terraform"
          
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: "./terraform"
  
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: "./terraform"
          
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.TF_VERSION }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: "./terraform"
      # - name: Set up Azure CLI
      #   uses: azure/setup-cli@v1

      # - name: Login to Azure
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Deploy infrastructure using Bicep
      #   id: deploy-infra
      #   uses: azure/arm-deploy@v1
      #   with:
      #     resource-group-name: 'mlflowcloud'
      #     template: './infrastructure/bicep/main.bicep'
      #     parameters: './infrastructure/bicep/parameters.json'
      #     deployment-name: 'mlflowcloud-deployment'
      #     location: 'westeurope'
  
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: update Azure Web App settings
  #       uses: azure/appservice-settings@v1
  #       with:
  #         app-name: 'gilsamamlflow'
  #         slot-name: 'Production'  # Optional and needed only if the settings have to be configured on the specific deployment slot
  #         app-settings-json: '${{ secrets.MLFLOWCLOUD_APPSETTINGS }}' 
  #         # connection-strings-json: '${{ secrets.CONNECTION_STRINGS }}'
  #         # general-settings-json: '{"alwaysOn": "false", "webSocketsEnabled": "true"}' #'General configuration settings as Key Value pairs'
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: 'gilsamamlflow'
  #         slot-name: 'Production'
  #         publish-profile: ${{ secrets.AzureAppService_PublishProfile_6df782e285cf4bb0b5d3dcafc7883458 }}
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}            